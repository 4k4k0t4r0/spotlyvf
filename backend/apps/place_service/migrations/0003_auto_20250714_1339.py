# Generated by Django 5.2.4 on 2025-07-14 18:39

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('place_service', '0002_reservationtimeslot_review_and_more'),
    ]

    operations = [
        migrations.RunSQL(
            # Arreglar la tabla Review para que tenga un ID auto-incremental correcto
            """
            -- Crear una nueva tabla con la estructura correcta
            CREATE TABLE place_service_review_new (
                id BIGINT AUTO_INCREMENT PRIMARY KEY,
                user_id BIGINT NOT NULL,
                place_id CHAR(32) NULL,
                google_place_id VARCHAR(200) NULL,
                google_place_name VARCHAR(200) NULL,
                google_place_address VARCHAR(500) NULL,
                reservation_id VARCHAR(36) NULL,
                rating INT NOT NULL,
                title VARCHAR(200) NOT NULL,
                content LONGTEXT NOT NULL,
                visited_date DATE NULL,
                would_recommend TINYINT(1) DEFAULT 1,
                created_at DATETIME(6) NOT NULL,
                updated_at DATETIME(6) NOT NULL,
                is_approved TINYINT(1) DEFAULT 1,
                INDEX idx_user (user_id),
                INDEX idx_place (place_id),
                INDEX idx_google_place (google_place_id),
                CONSTRAINT fk_review_user FOREIGN KEY (user_id) REFERENCES auth_users(id),
                CONSTRAINT fk_review_place FOREIGN KEY (place_id) REFERENCES place_service_place(id),
                CONSTRAINT fk_review_reservation FOREIGN KEY (reservation_id) REFERENCES place_service_reservation(id)
            );
            
            -- Copiar datos si los hay (probablemente no hay datos)
            INSERT INTO place_service_review_new 
            (user_id, place_id, google_place_id, google_place_name, google_place_address, 
             reservation_id, rating, title, content, visited_date, would_recommend, 
             created_at, updated_at, is_approved)
            SELECT 
                user_id, place_id, google_place_id, google_place_name, google_place_address,
                reservation_id, rating, title, 
                COALESCE(content, text, 'Sin contenido') as content,
                visited_date, COALESCE(would_recommend, 1) as would_recommend,
                created_at, updated_at, COALESCE(is_approved, 1) as is_approved
            FROM place_service_review
            WHERE user_id IS NOT NULL AND rating IS NOT NULL AND title IS NOT NULL;
            
            -- Eliminar la tabla vieja y renombrar la nueva
            DROP TABLE place_service_review;
            ALTER TABLE place_service_review_new RENAME TO place_service_review;
            """,
            reverse_sql="-- Esta migraci√≥n no es reversible"
        ),
    ]
